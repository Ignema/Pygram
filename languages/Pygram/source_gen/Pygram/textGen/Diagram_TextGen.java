package Pygram.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.core.behavior.BaseConcept__BehaviorDescriptor;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class Diagram_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("terraform {");
    tgs.newLine();
    tgs.append("required_providers {");
    tgs.newLine();
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.provider$rY$Z));
    tgs.append("= {");
    tgs.newLine();
    tgs.append("source = \"");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.providerSource$XUZV));
    tgs.append("\"");
    tgs.append("version =\"");
    tgs.appendNode(SPropertyOperations.getInteger(ctx.getPrimaryInput(), PROPS.providerVersion$XWD2));
    tgs.append("\"");

    BaseConcept__BehaviorDescriptor.getDetailedPresentation_id22G2W3WJ92t.invoke(Sequence.fromIterable(SLinkOperations.collect(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.edges$nr$r), LINKS.originNode$Yitv)).first());
    Sequence.fromIterable(SLinkOperations.collectMany(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.edges$nr$r), LINKS.targetNodes$YiVx)).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        (String) BaseConcept__BehaviorDescriptor.getDetailedPresentation_id22G2W3WJ92t.invoke(it);
      }
    });

    ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.clusters$ns2t)).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        (String) BaseConcept__BehaviorDescriptor.getDetailedPresentation_id22G2W3WJ92t.invoke(Sequence.fromIterable(SLinkOperations.collect(SLinkOperations.getChildren(it, LINKS.edges$kU_i), LINKS.originNode$Yitv)).first());
      }
    });
    ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.clusters$ns2t)).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        Sequence.fromIterable(SLinkOperations.collectMany(SLinkOperations.getChildren(it, LINKS.edges$kU_i), LINKS.targetNodes$YiVx)).visitAll(new IVisitor<SNode>() {
          public void visit(SNode it) {
            (String) BaseConcept__BehaviorDescriptor.getDetailedPresentation_id22G2W3WJ92t.invoke(it);
          }
        });
      }
    });
  }

  private static final class PROPS {
    /*package*/ static final SProperty provider$rY$Z = MetaAdapterFactory.getProperty(0x1882bc4a84224af4L, 0xa4e0177f578ae42eL, 0x3b3359bf7f716669L, 0x61c8bd6f54885c7fL, "provider");
    /*package*/ static final SProperty providerSource$XUZV = MetaAdapterFactory.getProperty(0x1882bc4a84224af4L, 0xa4e0177f578ae42eL, 0x3b3359bf7f716669L, 0x61c8bd6f54886ffdL, "providerSource");
    /*package*/ static final SProperty providerVersion$XWD2 = MetaAdapterFactory.getProperty(0x1882bc4a84224af4L, 0xa4e0177f578ae42eL, 0x3b3359bf7f716669L, 0x61c8bd6f54887004L, "providerVersion");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink edges$nr$r = MetaAdapterFactory.getContainmentLink(0x1882bc4a84224af4L, 0xa4e0177f578ae42eL, 0x3b3359bf7f716669L, 0x3b3359bf7f716673L, "edges");
    /*package*/ static final SContainmentLink originNode$Yitv = MetaAdapterFactory.getContainmentLink(0x1882bc4a84224af4L, 0xa4e0177f578ae42eL, 0x3b3359bf7f716658L, 0x4a1152048eed635dL, "originNode");
    /*package*/ static final SContainmentLink targetNodes$YiVx = MetaAdapterFactory.getContainmentLink(0x1882bc4a84224af4L, 0xa4e0177f578ae42eL, 0x3b3359bf7f716658L, 0x4a1152048eed635fL, "targetNodes");
    /*package*/ static final SContainmentLink clusters$ns2t = MetaAdapterFactory.getContainmentLink(0x1882bc4a84224af4L, 0xa4e0177f578ae42eL, 0x3b3359bf7f716669L, 0x3b3359bf7f716675L, "clusters");
    /*package*/ static final SContainmentLink edges$kU_i = MetaAdapterFactory.getContainmentLink(0x1882bc4a84224af4L, 0xa4e0177f578ae42eL, 0x3b3359bf7f716664L, 0x3b3359bf7f716665L, "edges");
  }
}
