package Pygram.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenAspectBase;
import Pygram.structure.LanguageConceptSwitch;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.text.rt.TextGenDescriptor;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.text.rt.TextGenModelOutline;
import org.jetbrains.mps.openapi.model.SNode;
import java.nio.charset.Charset;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;

public class TextGenAspectDescriptor extends TextGenAspectBase {
  private final LanguageConceptSwitch myIndex = new LanguageConceptSwitch();

  public TextGenAspectDescriptor() {
  }

  @Nullable
  @Override
  public TextGenDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    switch (myIndex.index(concept)) {
      case LanguageConceptSwitch.Diagram:
        return new Diagram_TextGen();
    }
    return null;
  }

  @Override
  public void breakdownToUnits(@NotNull TextGenModelOutline outline) {
    for (SNode root : outline.getModel().getRootNodes()) {
      if (root.getConcept().equals(CONCEPTS.Diagram$db)) {
        String fname = getFileName_Diagram(root);
        String ext = getFileExtension_Diagram(root);
        outline.registerTextUnit((ext == null ? fname : (fname + '.' + ext)), getPath_Diagram(root), Charset.forName(getEncoding_Diagram()), root);
        continue;
      }
    }
  }
  private static String getFileName_Diagram(SNode node) {
    return SPropertyOperations.getString(node, PROPS.filename$nqCn);
  }
  private static String getFileExtension_Diagram(SNode node) {
    return null;
  }
  private static String getEncoding_Diagram() {
    return "UTF-32";
  }
  private static String getPath_Diagram(SNode node) {
    return SPropertyOperations.getString(node, PROPS.filename$nqCn) + "tf";
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Diagram$db = MetaAdapterFactory.getConcept(0x1882bc4a84224af4L, 0xa4e0177f578ae42eL, 0x3b3359bf7f716669L, "Pygram.structure.Diagram");
  }

  private static final class PROPS {
    /*package*/ static final SProperty filename$nqCn = MetaAdapterFactory.getProperty(0x1882bc4a84224af4L, 0xa4e0177f578ae42eL, 0x3b3359bf7f716669L, 0x3b3359bf7f71666fL, "filename");
  }
}
